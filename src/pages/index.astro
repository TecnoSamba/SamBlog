---
import Layout from "../layouts/Layout.astro";
import Menu from "../components/Menu.astro";
import CursorScript from "../components/CursorScript.astro";
import { getCollection } from "astro:content";
import Entry from "../components/Entry.astro";
import Footer from "../components/Footer.astro";
import { parseDate } from "../lib/utils";

const entries = await getCollection("entry");
const JavaScript = {
	label: "JavaScript",
	class: "javascript",
};
const Html = {
	label: "Html",
	class: "html",
};
const Css = {
	label: "Css",
	class: "css",
};
const Others = {
	label: "Otros",
	class: "others",
};

const finalEntries = entries.sort(
	(a, b) =>
		parseDate(b.data.date).getTime() - parseDate(a.data.date).getTime(),
);
---

<!-- Meta tags -->
<title>Desarrollo Web en Espa침ol - SamBlog</title>
<meta name="title" content="Desarrollo Web en Espa침ol - SamBlog" />
<meta
	name="description"
	content="SamBlog el blog de desarrollo web en Espa침ol! Posts sobre diversos temas relacionados con el desarrollo web full-stack para aprender algo nuevo cada d칤a."
/>

<meta property="og:type" content="website" />
<meta property="og:url" content="https://blog-sam.vercel.app/" />
<meta property="og:title" content="Desarrollo Web en Espa침ol - SamBlog" />
<meta
	property="og:description"
	content="춰SamBlog el blog de desarrollo web en Espa침ol! Posts sobre diversos temas relacionados con el desarrollo web full-stack para aprender algo nuevo cada d칤a."
/>
<meta property="og:image" content="/logo.png" />

<meta property="twitter:card" content="summary_large_image" />
<meta property="twitter:url" content="/logo.png" />
<meta property="twitter:title" content="Desarrollo Web en Espa침ol - SamBlog" />
<meta
	property="twitter:description"
	content="SamBlog el blog de desarrollo web en Espa침ol! Posts sobre diversos temas relacionados con el desarrollo web full-stack para aprender algo nuevo cada d칤a."
/>
<meta property="twitter:image" content="/logo.png" />

<!-- End meta tags -->

<Layout title="Desarrollo Web en Espa침ol - SamBlog">
	<CursorScript />
	<Menu />
	<main>
		<div class="about">
			<div class="text">
				<h2>Sobre m칤</h2>
				<p>
					Hola a todos!游녦 Mi nombre es TecnoSamba, soy un apasionado
					del desarrollo web y de la programaci칩n en general.
					<br /><br />
					Tengo una cuenta de GitHub en la que subo proyectos como este,
					<span
						><a href="https://github.com/TecnoSamba"
							>@TecnoSamba</a
						></span
					>.
				</p>
			</div>
			<a href="https://github.com/tecnosamba"
				><img src="./tecnosamba21.jpg" /></a
			>
		</div>
		<a href="/entries" class="title-a"
			><h2 transition:name="title-entries" class="title">
				Art칤culos:
			</h2></a
		>
		<div class="articles">
			{
				finalEntries.map((entry) => {
					const { slug, data } = entry;
					const { title, author, tech } = data;
					let label;
					let class_name;

					if (tech === "JavaScript") {
						label = JavaScript.label;
						class_name = JavaScript.class;
					} else if (tech === "Html") {
						label = Html.label;
						class_name = Html.class;
					} else if (tech === "Css") {
						label = Css.label;
						class_name = Css.class;
					} else {
						label = Others.label;
						class_name = Others.class;
					}

					return (
						<Entry
							title={title}
							class_name={class_name}
							slug={slug}
							label={label}
							route={slug}
						/>
					);
				})
			}
		</div>
		<h2 style="color: #888800;">JavaScript:</h2>
		<div class="articles">
			{
				finalEntries
					.filter((entry) => entry.data.tech === "JavaScript")
					.map((entry) => {
						return (
							<Entry
								title={entry.data.title}
								class_name="javascript"
								slug={entry.slug + '-duplicated'}
								route={entry.slug}
								label="JavaScript"
							/>
						);
					})
			}
		</div>
		{
			finalEntries.filter((entry) => entry.data.tech === "Css").length >
			0 ? (
				<h2 style="color: #888800;">Css:</h2>
			) : null
		}
		<div class="articles">
			{
				finalEntries
					.filter((entry) => entry.data.tech === "Css")
					.map((entry) => {
						return (
							<Entry
								title={entry.data.title}
								class_name="css"
								slug={entry.slug + '-duplicated'}
								route={entry.slug}
								label="Css"
							/>
						);
					})
			}
		</div>
		<h2 style="color: #d32e00;">Html:</h2>
		<div class="articles">
			{
				finalEntries
					.filter((entry) => entry.data.tech === "Html")
					.map((entry) => {
						return (
							<Entry
								title={entry.data.title}
								class_name="html"
								slug={entry.slug + '-duplicated'}
								route={entry.slug}
								label="Html"
							/>
						);
					})
			}
		</div>
		<h2 style="color: #6b6b6a;">Otros:</h2>
		<div class="articles">
			{
				finalEntries
					.filter((entry) => entry.data.tech === "Other")
					.map((entry) => {
						return (
							<Entry
								title={entry.data.title}
								class_name="other"
								slug={entry.slug + '-duplicated'}
								route={entry.slug}
								label="Otros"
							/>
						);
					})
			}
		</div>
	</main>
	<Footer />
	<style>
		body {
			background-color: var(--background);
		}
		a::before {
			height: 0;
		}
		@media (max-width: 1250px) {
			.articles {
				grid-template-columns: repeat(1, 1fr);
				grid-auto-rows: minmax(100px, auto);
			}
			img {
				height: 100px;
				width: 100px;
				margin-left: 30px;
			}
			.about {
				gap: 10%;
			}
		}
		@media (width > 1250px) {
			img {
				height: 300px;
				width: 300px;
			}
			.about {
				gap: 20%;
			}
			.articles {
				grid-template-columns: repeat(3, 1fr);
				grid-auto-rows: minmax(100px, auto);
			}
		}
		.about {
			color: var(--font);
			display: flex;
			background-color: var(--about-bg);
			border: 1.5px solid var(--font);
			border-radius: 6px;
			padding: 2%;
			align-items: center;
			margin-right: 25px;
			margin-left: 25px;
			.text {
				max-width: 60%;
			}
		}
		img {
			border-radius: 50%;
			transition: all 0.5s;
		}
		.about img:hover {
			scale: 110%;
		}
		main {
			padding-left: 2%;
			margin-bottom: 30px;
		}
		span {
			background-image: linear-gradient(
				to right,
				rgb(191, 17, 191),
				rgb(10, 225, 121)
			);
			border-radius: 4px;
		}
		.articles {
			display: grid;
			gap: 6px;
		}
		a {
			width: min-content;
			border-bottom: 0;
			color: var(--font);
		}

		@keyframes background-image {
			from {
				background-color: none;
			}
			to {
				background-color: var(--hover);
			}
		}

		@keyframes background-image-reverse {
			from {
				background-color: var(--hover);
			}
			to {
				background-color: none;
			}
		}

		.title {
			color: var(--font);
			width: min-content;
			padding: 2px;
			border-radius: 4px;
		}
		.title:hover {
			animation: background-image 0.5s;
			animation-fill-mode: forwards;
		}
		.title:not(:hover) {
			animation: background-image-reverse 0.5s;
			animation-fill-mode: forwards;
		}
	</style>
</Layout>
