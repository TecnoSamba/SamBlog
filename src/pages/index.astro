---
import Layout from "../layouts/Layout.astro";
import Menu from "../components/Menu.astro";
import CursorScript from "../components/CursorScript.astro";
import { getCollection } from "astro:content";
import Entry from "../components/Entry.astro";

const entries = await getCollection("entry");
const JavaScript = {
	label: "JavaScript",
	class: "javascript",
};
const Html = {
	label: "Html",
	class: "html",
};
const Css = {
	label: "Css",
	class: "css",
};
const Others = {
	label: "Otros",
	class: "others",
};
---


<Layout title="Desarrollo Web en EspaÃ±ol - SamBlog">
	<CursorScript transition:persist="cursor"/>
	<Menu />
	<main>
		<div class="about">
			<div class="text">
				<h2>Sobre mÃ­</h2>
				<p>
					Hola a todos!ðŸ‘‹ Mi nombre es TecnoSamba21, soy un apasionado
					del desarrollo web y de la programaciÃ³n en general.
					<br /><br />
					Tengo una cuenta de GitHub en la que subo proyectos como este,
					<span
						><a href="https://github.com/TecnoSamba21"
							>@TecnoSamba21</a
						></span
					>.
				</p>
			</div>
			<a href="https://github.com/tecnosamba21"
				><img src="./tecnosamba21.jpg" /></a
			>
		</div>
		<a href="/entries" class="title-a"
			><h2 transition:name="title-entries" class="title">
				ArtÃ­culos:
			</h2></a
		>
		<div class="articles">
			{
				entries.map((entry) => {
					const { slug, data } = entry;
					const { title, author, tech } = data;
					let label;
					let class_name;

					if (tech === "JavaScript") {
						label = JavaScript.label;
						class_name = JavaScript.class;
					} else if (tech === "Html") {
						label = Html.label;
						class_name = Html.class;
					} else if (tech === "Css") {
						label = Css.label;
						class_name = Css.class;
					} else {
						label = Others.label;
						class_name = Others.class;
					}

					return (
						<Entry
							title={title}
							class_name={class_name}
							slug={slug}
							label={label}
						/>
					);
				})
			}
		</div>
	</main>
	<style>
		body {
			background-color: var(--background);
		}
		@media (max-width: 1250px) {
			.articles {
				grid-template-columns: repeat(1, 1fr);
				grid-auto-rows: minmax(100px, auto);
			}
			img {
				height: 100px;
				width: 100px;
				margin-left: 30px;
			}
			.about {
				gap: 10%;
			}
		}
		@media (width > 1250px) {
			img {
				height: 300px;
				width: 300px;
			}
			.about {
				gap: 20%;
			}
			.articles {
				grid-template-columns: repeat(3, 1fr);
				grid-auto-rows: minmax(100px, auto);
			}
		}
		.about {
			color: var(--font);
			display: flex;
			background-color: var(--about-bg);
			border: 1.5px solid var(--font);
			border-radius: 6px;
			padding: 2%;
			align-items: center;
			margin-right: 25px;
			margin-left: 25px;
			.text {
				max-width: 60%;
			}
		}
		img {
			border-radius: 50%;
			transition: all 0.5s;
		}
		.about img:hover {
			scale: 110%;
		}
		main {
			padding-left: 2%;
		}
		span {
			background-image: linear-gradient(
				to right,
				rgb(191, 17, 191),
				rgb(10, 225, 121)
			);
			border-radius: 4px;
		}
		.articles {
			display: grid;
			gap: 6px;
		}
		a {
			width: min-content;
			border-bottom: 0;
			color: var(--font);
		}

		@keyframes background-image {
			from {
				background-color: none;
			}
			to {
				background-color: var(--hover);
			}
		}

		@keyframes background-image-reverse {
			from {
				background-color: var(--hover);
			}
			to {
				background-color: none;
			}
		}

		.title {
			color: var(--font);
			width: min-content;
			padding: 2px;
			border-radius: 4px;
		}
		.title:hover {
			animation: background-image 0.5s;
			animation-fill-mode: forwards;
		}
		.title:not(:hover) {
			animation: background-image-reverse 0.5s;
			animation-fill-mode: forwards;
		}
	</style>
</Layout>
